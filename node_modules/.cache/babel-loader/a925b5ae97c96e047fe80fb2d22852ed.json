{"ast":null,"code":"import _defineProperty from\"/home/jingyi/my-fullstack-app/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import Cookies from'js-cookie';/**\n * Format Org and Username correctly for the Serverless Platform backend\n */export var formatOrgAndUsername=function formatOrgAndUsername(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';name=name.toString().toLowerCase().replace(/[^a-z\\d-]+/gi,'-');// Remove multiple instances of hyphens\nname=name.replace(/-{2,}/g,'-');if(name.length>40){name=name.substring(0,40);}return name;};/**\n * Parse query parameters in a URL\n * @param {*} searchString \n */export var parseQueryParams=function parseQueryParams(){var searchString=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(!searchString){return null;}// Clone string\nvar clonedParams=(' '+searchString).slice(1);return clonedParams.substr(1).split('&').filter(function(el){return el.length;}).map(function(el){return el.split('=');}).reduce(function(accumulator,currentValue){return Object.assign(accumulator,_defineProperty({},decodeURIComponent(currentValue.shift()),decodeURIComponent(currentValue.pop())));},{});};/**\n * Parse hash fragment parameters in a URL\n */export var parseHashFragment=function parseHashFragment(hashString){var hashData={};var hash=decodeURI(hashString);hash=hash.split('&');hash.forEach(function(val){val=val.replace('#','');hashData[val.split('=')[0]]=val.split('=')[1];});return hashData;};/**\n * Save session in browser cookie\n */export var saveSession=function saveSession(userId,userEmail,userToken){Cookies.set('serverless',{userId:userId,userEmail:userEmail,userToken:userToken});};/**\n * Get session in browser cookie\n */export var getSession=function getSession(){var data=Cookies.get('serverless');return data?JSON.parse(data):null;};/**\n * Delete session in browser cookie\n */export var deleteSession=function deleteSession(){Cookies.remove('serverless');};","map":{"version":3,"sources":["/home/jingyi/my-fullstack-app/site/src/utils/helpers.js"],"names":["Cookies","formatOrgAndUsername","name","toString","toLowerCase","replace","length","substring","parseQueryParams","searchString","clonedParams","slice","substr","split","filter","el","map","reduce","accumulator","currentValue","Object","assign","decodeURIComponent","shift","pop","parseHashFragment","hashString","hashData","hash","decodeURI","forEach","val","saveSession","userId","userEmail","userToken","set","getSession","data","get","JSON","parse","deleteSession","remove"],"mappings":"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","sourcesContent":["import Cookies from 'js-cookie'\n\n/**\n * Format Org and Username correctly for the Serverless Platform backend\n */\nexport const formatOrgAndUsername = (name = '') => {\n   name = name.toString().toLowerCase().replace(/[^a-z\\d-]+/gi, '-')\n   // Remove multiple instances of hyphens\n   name = name.replace(/-{2,}/g, '-')\n   if (name.length > 40) {\n     name = name.substring(0, 40)\n   }\n   return name\n}\n\n/**\n * Parse query parameters in a URL\n * @param {*} searchString \n */\nexport const parseQueryParams = (searchString = null) => {\n  if (!searchString) {\n    return null\n  }\n\n  // Clone string\n  let clonedParams = (' ' + searchString).slice(1)\n\n  return clonedParams\n    .substr(1)\n    .split('&')\n    .filter((el) => el.length)\n    .map((el) => el.split('='))\n    .reduce(\n      (accumulator, currentValue) =>\n        Object.assign(accumulator, {\n          [decodeURIComponent(currentValue.shift())]: decodeURIComponent(currentValue.pop())\n        }),\n      {}\n    )\n}\n\n/**\n * Parse hash fragment parameters in a URL\n */\nexport const parseHashFragment = (hashString) => {\n  const hashData = {}\n  let hash = decodeURI(hashString)\n  hash = hash.split('&')\n  hash.forEach((val) => {\n    val = val.replace('#', '')\n    hashData[val.split('=')[0]] = val.split('=')[1]\n  })\n  return hashData\n}\n\n/**\n * Save session in browser cookie\n */\nexport const saveSession = (userId, userEmail, userToken) => {\n  Cookies.set('serverless', { userId, userEmail, userToken })\n}\n\n/**\n * Get session in browser cookie\n */\nexport const getSession = () => {\n  const data = Cookies.get('serverless')\n  return data ? JSON.parse(data) : null\n}\n\n/**\n * Delete session in browser cookie\n */\nexport const deleteSession = () => {\n  Cookies.remove('serverless')\n}"]},"metadata":{},"sourceType":"module"}